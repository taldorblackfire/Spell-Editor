@model Spell_Editor.Models.RefShadowGift

@{
    ViewBag.Title = "Edit Shadow Gift";
}

<h2>Edit Shadow Gift</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        
<div class="form-horizontal">
    <h4>Gift Information</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RefGiftsId)
    <div class="form-group">
        <label class="control-label col-md-2">Category</label>
        <div class="col-md-10">
            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Name</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.GiftName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GiftName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Renown</label>
        <div class="col-md-10">
            @Html.DropDownList("RenownId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RenownId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Die Pool</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiePool, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiePool, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Action, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea id="Description" name="Description" rows="12" class="form-control" cols="80">@Model.Description</textarea>
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Dramatic Failure</label>
        <div class="col-md-10">
            <textarea id="DramaticFailure" name="DramaticFailure" rows="12" style="max-width: 800px;" cols="80">@Model.DramaticFailure</textarea>
            @Html.ValidationMessageFor(model => model.DramaticFailure, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Failure, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea id="Failure" name="Failure" rows="12" style="max-width: 800px;" cols="80">@Model.Failure</textarea>
            @Html.ValidationMessageFor(model => model.Failure, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Success, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea id="Success" name="Success" rows="12" style="max-width: 800px;" cols="80">@Model.Success</textarea>
            @Html.ValidationMessageFor(model => model.Success, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Exceptional Success</label>
        <div class="col-md-10">
            <textarea id="ExceptionalSuccess" name="ExceptionalSuccess" rows="12" style="max-width: 800px;" cols="80">@Model.ExceptionalSuccess</textarea>
            @Html.ValidationMessageFor(model => model.ExceptionalSuccess, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
    
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
